# Generated by Django 2.2.11 on 2020-05-21 00:27

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    replaces = [('mmc', '0001_initial'), ('mmc', '0002_mmclog_was_notified'), ('mmc', '0003_mmclog_stdout_messages'), ('mmc', '0004_mmcemail_ignore'), ('mmc', '0005_auto_20150315_0644'), ('mmc', '0006_auto_20150424_2114'), ('mmc', '0007_mmcscript_calls'), ('mmc', '0008_mmcscript_real_time'), ('mmc', '0009_auto_20150425_1540'), ('mmc', '0010_mmcscript_enable_queries'), ('mmc', '0011_auto_20150425_1710'), ('mmc', '0012_auto_20150717_0649'), ('mmc', '0013_mmclog_is_fixed'), ('mmc', '0014_mmcscript_temporarily_disabled'), ('mmc', '0015_auto_20160706_1633'), ('mmc', '0016_auto_20160923_0751'), ('mmc', '0017_mmcscript_track_at_exit'), ('mmc', '0018_auto_20160923_0847'), ('mmc', '0019_auto_20200521_0025'), ('mmc', '0020_auto_20200521_0107')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MMCHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('ignore', models.BooleanField(default=False, help_text='All logs from all scripts on this host will be ignored.')),
            ],
            options={
                'verbose_name': 'Host',
                'verbose_name_plural': 'Hosts',
            },
        ),
        migrations.CreateModel(
            name='MMCScript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('ignore', models.BooleanField(default=False, help_text='All logs from this script will be ignored.')),
                ('one_copy', models.BooleanField(default=False, help_text='Only one copy of this script will be run.')),
                ('save_on_error', models.BooleanField(default=False, help_text='This flag can be used only for ignored commands.')),
                ('enable_triggers', models.BooleanField(default=False, help_text='Enable triggers for receive email notification, if threshold of counters will be exceeded')),
                ('trigger_cpu', models.FloatField(blank=True, help_text='Set the threshold time for CPU', null=True)),
                ('trigger_memory', models.FloatField(blank=True, help_text='Set the threshold MB for Memory', null=True)),
                ('trigger_time', models.FloatField(blank=True, help_text='Set the threshold sec for execution time', null=True)),
                ('calls', models.BigIntegerField(default=0, verbose_name='Number of calls')),
                ('real_time', models.BooleanField(default=False, help_text='Real Time info about command (for long tasks).')),
                ('enable_queries', models.BooleanField(default=False, help_text='Profile queries numbers.')),
                ('trigger_queries', models.FloatField(blank=True, help_text='Set the threshold number of queries', null=True)),
                ('interval_restriction', models.PositiveIntegerField(blank=True, default=None, help_text='Interval before script can be run again', null=True)),
                ('temporarily_disabled', models.SmallIntegerField(choices=[(0, 'Enabled'), (1, 'Disabled / Raise error'), (2, 'Disabled / Silence mode')], default=0, help_text='Temporarily disable script execution')),
                ('last_call', models.DateTimeField(auto_now=True, default=datetime.datetime(2016, 9, 23, 12, 51, 43, 352472, tzinfo=utc))),
                ('max_elapsed', models.FloatField(default=0.0)),
                ('track_at_exit', models.BooleanField(default=True, help_text='Disable for uWSGI/Celery')),
            ],
            options={
                'verbose_name': 'Script',
                'verbose_name_plural': 'Scripts',
            },
        ),
        migrations.CreateModel(
            name='MMCLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField(auto_now=True)),
                ('elapsed', models.FloatField()),
                ('success', models.NullBooleanField(default=None)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('traceback', models.TextField(blank=True, null=True)),
                ('sys_argv', models.CharField(blank=True, max_length=255, null=True)),
                ('memory', models.FloatField(default=0.0)),
                ('cpu_time', models.FloatField(default=0.0)),
                ('hostname', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mmc.MMCHost')),
                ('script', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mmc.MMCScript')),
                ('was_notified', models.BooleanField(default=False)),
                ('stdout_messages', models.TextField(blank=True, null=True)),
                ('pid', models.IntegerField(default=1)),
                ('queries', models.BigIntegerField(default=0)),
                ('is_fixed', models.NullBooleanField(default=None)),
            ],
            options={
                'verbose_name': 'Log',
                'verbose_name_plural': 'Logs',
            },
        ),
        migrations.CreateModel(
            name='MMCEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now=True)),
                ('email', models.EmailField(help_text='Email will be used for send all exceptions from command.', max_length=254)),
                ('is_active', models.BooleanField(default=True, help_text='Email may be switched off for a little while.')),
                ('ignore', models.ManyToManyField(blank=True, help_text='Helpful for different teams. Choose script which you want to ignore.', to='mmc.MMCScript')),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
            },
        ),
    ]
